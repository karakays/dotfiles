# 256 colors for vim
set-option -g default-terminal "tmux-256color"
# create non-login shells only
set-option -g default-command "${SHELL}"
set-option -g history-limit 10000
set-option -g mode-keys vi

# bind mouse events
set-option -g mouse on
set-option -s set-clipboard off

# unbind customized default keys

# switch to next pane not used
unbind o
# window rename and move not used
unbind ,
unbind .
# default pane switch not used
unbind %
unbind '"' 

# pane/window index
set-option        -g base-index 1
set-window-option -g pane-base-index 1

# split panes
bind v split-window -h
bind s split-window -v

# pane switches

# next/previous pane (cycle)
bind ^b select-pane -t :.+
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R
 
# window switches

# next/previous window
bind n select-window -n
bind p select-window -p
# 0 is always the first window
bind 0 select-window -t:\^
# 9 is always the last window
bind 9 select-window -t:\$
# go to last window
bind - select-window -t:!

# session switch

# next/previous session
bind , switch-client -p
bind . switch-client -n
# commands
# ls                    // list sessions
# new -s [name]         // create new session

# source config
bind r source-file ~/.tmux/.tmux.conf\; display "Reloaded!"

# padding above status bar
set-window-option -g pane-border-status bottom
set-window-option -g pane-border-format 'â”€'

# rename windows to current working directory
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-window-option -g window-status-format '#[bg=black,fg=white] #W #[reverse] #F '
set-window-option -g window-status-current-format '#[bg=white,fg=default,bold] #W #[reverse,nobold] #F '

# statusbar
set-option -g status-interval 5
set-option -g status-position bottom
set-option -g status-style bg=default,fg=colour1
set-option -g status-right-length 20
set-option -g status-left-length 20

# window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity on

if-shell "uname -s | grep -q Darwin" "source-file "$TMUXHOME"/.tmux.conf.osx"
if-shell "uname -s | grep -q Linux" "source-file "$TMUXHOME"/.tmux.conf.linux"
if-shell "uname -s | grep -q CYGWIN" "source-file "$TMUXHOME"/.tmux.conf.win"

# resurrect
run-shell "$TMUXHOME/resurrect/resurrect.tmux"
